<?xml version="1.0" encoding="UTF-8"?>

<!--

  /*
  * Copyright 2009 Victor Igumnov <victori@fabulously40.com>
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may
  * not use this file except in compliance with the License. You may obtain
  * a copy of the License at
  *
  *     http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */

-->

<project default="compile" name="smemcache" basedir=".">

  <property name="src.dir" value="src/"/>
  <property name="build.dir" value="target/"/>
  <property name="build.dir.classes" value="${build.dir}/classes"/>

  <path id="project.classpath">
    <pathelement location="${build.dir}"/>
    <fileset dir="libs/">
      <include name="**/*.jar"></include>
    </fileset>
  </path>

  <taskdef resource="scala/tools/ant/antlib.xml">
    <classpath refid="project.classpath"/>
  </taskdef>

  <target name="compile">
    <mkdir dir="${build.dir.classes}"/>

    <scalac srcdir="${src.dir}" destdir="${build.dir.classes}" classpathref="project.classpath" force="changed">
      <include name="**/*.scala"/>
    </scalac>
    <copy todir="${build.dir.classes}">
      <fileset dir="${src.dir}">
        <include name="**/*.*" />
        <exclude name="**/*.scala" />
      </fileset>
    </copy>
  </target>

  <target name="init" description="o Creates all directories for building">
    <mkdir dir="${build.dir.classes}" />
  </target>

  <target name="jar" depends="compile" description="o Creates a JAR file for this package">
    <mkdir dir="${build.dir.classes}" />
    <manifestclasspath property="dist.manifest.classpath" jarfile="${build.dir}/smemcached.jar">
      <classpath refid="project.classpath" />
    </manifestclasspath>

    <jar destfile="${build.dir}/smemcached.jar"
      excludes="**/package.html" basedir="${build.dir}/classes" includes="**/*.class"
      >
      <fileset dir="${src.dir}">
        <include name="**/*"/>
      </fileset>
      <fileset dir="${src.dir}" includes="*.*" />
      <zipfileset src="libs/commons-cli-1.0.jar"/>
      <zipfileset src="libs/commons-codec-1.3.jar"/>
      <zipfileset src="libs/commons-collections-3.2.jar"/>
      <zipfileset src="libs/commons-dbcp-1.2.2.jar"/>
      <zipfileset src="libs/commons-httpclient-3.1.jar"/>
      <zipfileset src="libs/commons-io-1.3.2.jar"/>
      <zipfileset src="libs/commons-lang-2.4.jar"/>
      <zipfileset src="libs/commons-logging-1.1.1.jar"/>
      <zipfileset src="libs/commons-net-1.4.1.jar"/>
      <zipfileset src="libs/commons-pool-1.3.jar"/>
      <zipfileset src="libs/ehcache-1.6.0-beta5.jar"/>
      <zipfileset src="libs/mina-core-2.0.0-M4.jar"/>
      <zipfileset src="libs/scala-library.jar"/>
      <zipfileset src="libs/slf4j-api-1.4.3.jar"/>
      <zipfileset src="libs/slf4j-jdk14-1.4.3.jar"/>
      <manifest>
        <attribute name="Main-Class" value="com.base.SMemcachedApplication"/>
        <attribute name="Class-Path" value="${dist.manifest.classpath}"/>  
      </manifest>
    </jar>
  </target>

  <target name="clean" description="o Cleans up the build artifacts">
    <delete dir="${build.dir}" failonerror="false" />
    <delete file="smemcached.jar" failonerror="false" />
  </target>

  <target name="run" depends="compile">
    <java classname="scala.tools.nsc.MainGenericRunner" fork="true">
      <classpath>
        <path refid="project.classpath"/>
      </classpath>

      <arg line="com.base.SMemcachedApplication"/>
    </java>
  </target>

</project>
